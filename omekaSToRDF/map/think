

iri -> iri V devo prendere gli iri che non sono anche piri

piri -> piri

iri -> piri

piri -> iri

iri -> type V devo prendere gli iri che non sono anche piri

iri -> lang

piri -> type

piri -> lang


<#TriplesMap_ItemIRI>
    a rr:TriplesMap ;

    rml:logicalSource [
        rml:source <#DB_source> ;
        rml:referenceFormulation ql:SQL ;
        rml:query "SELECT resource.id AS id, value.type AS type ,value.value_resource_id AS valueID ,CONCAT(vocabulary.namespace_uri, resource_class.local_name) AS urilabel, value.value AS value, value.type AS type, property.local_name, CONCAT(vocabulary.namespace_uri, property.local_name) AS urilocalname FROM resource join resource_class on resource.resource_class_id = resource_class.id join vocabulary on vocabulary.id = resource_class.vocabulary_id JOIN value ON (resource.id = value.resource_id AND value.type = 'resource:item') JOIN property on value.property_id = property.id;"
    ] ;

    rr:subjectMap [
        rr:template "{id}" ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate type:type ;
        rr:objectMap [
            rml:reference "urilabel";
            rr:termType rr:IRI;
        ] ;
    ] ;

rr:predicateObjectMap [
    rr:predicateMap [
        rml:reference "urilocalname" ;
        rr:termType rr:IRI
    ] ;

    rr:objectMap [
        rr:template "{valueID}" ;
    ]
] .

AND value.type = 'resource:item'